#!/usr/bin/env python3
"""
–ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤.
"""

import asyncio
import time
from memory_profiler import profile
import httpx


@profile
async def test_memory_usage():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –ø—Ä–∏ API –∑–∞–ø—Ä–æ—Å–∞—Ö."""
    print("üß† –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏...")

    async with httpx.AsyncClient() as client:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
        try:
            response = await client.get("http://localhost:8000/health", timeout=5.0)
            print(f"‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
        except Exception as e:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
            return

        # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        questions = [
            "Hello!",
            "What is artificial intelligence?",
            "Explain Python programming",
            "Tell me about FastAPI",
            "Write a short story",
        ]

        # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        for i, question in enumerate(questions, 1):
            print(f"üì§ –ó–∞–ø—Ä–æ—Å {i}: {question[:30]}...")

            try:
                start_time = time.perf_counter()
                response = await client.post(
                    "http://localhost:8000/question",
                    json={"text": question},
                    timeout=30.0,
                )
                end_time = time.perf_counter()

                print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –∑–∞ {end_time - start_time:.2f}s")

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            await asyncio.sleep(1)

    print("üèÅ –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    asyncio.run(test_memory_usage())
