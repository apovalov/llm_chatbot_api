version: "3.8"

services:
  # Main API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: llm-chatbot-api
    ports:
      - "8000:8000"
    environment:
      # LLM Configuration (override with .env file)
      - LLM_BASE_URL=https://api.openai.com/v1
      - LLM_MODEL=gpt-3.5-turbo
      - LLM_API_KEY=${LLM_API_KEY}
      - LLM_TEMPERATURE=0.7
      - LLM_MAX_TOKENS=1000
      - LLM_SYSTEM_PROMPT=${LLM_SYSTEM_PROMPT:-You are a helpful AI assistant.}
      - REQUEST_TIMEOUT=30.0
    env_file:
      - .env  # Load environment variables from .env file
    volumes:
      # Mount results directory for profiling data persistence
      - ./results:/app/results
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - chatbot-network

  # Development API service with hot reload
  api-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: llm-chatbot-api-dev
    ports:
      - "8001:8000"
    environment:
      - LLM_BASE_URL=https://api.openai.com/v1
      - LLM_MODEL=gpt-3.5-turbo
      - LLM_API_KEY=${LLM_API_KEY}
      - LLM_TEMPERATURE=0.7
    env_file:
      - .env
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/.venv  # Exclude virtual environment
    command: >
      sh -c "cd /app &&
             uv run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - chatbot-network
    profiles:
      - dev  # Only start with --profile dev

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: llm-chatbot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - chatbot-network
    profiles:
      - cache  # Only start with --profile cache

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: llm-chatbot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - chatbot-network
    profiles:
      - proxy  # Only start with --profile proxy

volumes:
  redis_data:
    driver: local

networks:
  chatbot-network:
    driver: bridge